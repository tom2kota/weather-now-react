{"version":3,"sources":["images/weather-logo.svg","api/openweathermap.js","components/WeatherBanner.js","components/SearchBar.js","components/App.js","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref","svgRef","title","props","id","x","y","viewBox","style","enableBackground","xmlSpace","ref","fill","d","ForwardRef","forwardRef","instance","axios","create","baseURL","interceptors","request","use","config","params","q","units","appid","WeatherBanner","className","href","src","alt","SearchBar","state","searchRegexTerm","searchRegexError","onInputChange","event","setState","value","onFormSubmit","preventDefault","test","onTextSubmit","console","log","onRegexError","Component","App","countryCode","countryName","countryTemperature","countryWeather","countryError","countryError1","getSearchWeatherState","a","openweathermap","get","then","response","data","sys","country","name","main","temp","toFixed","weather","map","description","toString","replace","w","c","toUpperCase","catch","error","printRegexError","toLocaleLowerCase","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.abff0a2d.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar SvgWeatherLogo = function SvgWeatherLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 511.998 511.998\",\n    style: {\n      enableBackground: \"new 0 0 511.998 511.998\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#9FDEF7\"\n    },\n    d: \"M155.968,187.07h38.254c14.29-26.216,38.712-46.094,68.024-54.357 c-5.897-14.318-19.979-24.397-36.419-24.397c-4.11,0-8.069,0.633-11.79,1.798c0.02-0.598,0.046-1.195,0.046-1.798 c0-29.244-23.714-52.956-52.96-52.956c-25.223,0-46.309,17.632-51.642,41.239c-3.168-1.056-6.548-1.634-10.069-1.634 c-10.834,0-20.398,5.424-26.133,13.703c-3.2-0.825-6.56-1.272-10.019-1.272c-22,0-39.834,17.835-39.834,39.836 c0,21.997,17.835,39.836,39.834,39.836h63.687\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#BEEAFC\"\n    },\n    d: \"M373.536,162.958c-20.468-21.893-49.607-35.578-81.941-35.578c-53.408,0-98.066,37.345-109.362,87.34 c-6.704-2.236-13.865-3.466-21.318-3.466c-22.947,0-43.196,11.49-55.341,29.022c-6.779-1.751-13.888-2.692-21.216-2.692 C37.768,237.584,0,275.352,0,321.942c0,46.588,37.768,84.361,84.358,84.361h93.011c0.196-28.675,23.489-51.858,52.206-51.858 c5.446,0,10.697,0.835,15.633,2.382c-0.023-0.79-0.059-1.582-0.059-2.382c0-38.787,31.442-70.23,70.228-70.23 c33.443,0,61.41,23.387,68.483,54.691c4.197-1.401,8.678-2.17,13.346-2.17c14.368,0,27.051,7.194,34.655,18.175 c4.245-1.098,8.696-1.688,13.284-1.688c19.231,0,36.057,10.279,45.295,25.637c13.396-14.793,21.557-34.414,21.557-55.94 c0-46.056-37.332-83.384-83.384-83.384c-8.696,0-17.08,1.333-24.963,3.803c0.041-1.263,0.096-2.529,0.096-3.803 c0-18.832-4.641-36.579-12.845-52.163\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#AEE4FF\"\n    },\n    d: \"M89.442,237.74c-1.682-0.102-3.376-0.157-5.084-0.157C37.768,237.582,0,275.351,0,321.941 c0,46.588,37.768,84.361,84.358,84.361h93.011c0.061-8.998,2.4-17.454,6.464-24.823C137.844,346.086,103.961,295.755,89.442,237.74z \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#83D4ED\"\n    },\n    d: \"M81.614,174.026c0-27.362,4.208-53.738,11.999-78.528c-8.402,1.551-15.646,6.407-20.333,13.171 c-3.2-0.825-6.56-1.272-10.019-1.272c-22,0-39.834,17.835-39.834,39.836c0,21.997,17.835,39.836,39.834,39.836h18.678 C81.727,182.747,81.614,178.4,81.614,174.026z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#E4F2F9\"\n    },\n    d: \"M445.146,350.991c-4.588,0-9.041,0.588-13.284,1.688c-7.604-10.982-20.287-18.175-34.655-18.175 c-4.668,0-9.149,0.769-13.346,2.17c-7.074-31.305-35.04-54.691-68.483-54.691c-38.786,0-70.228,31.443-70.228,70.23 c0,0.8,0.035,1.592,0.059,2.382c-4.936-1.547-10.187-2.382-15.633-2.382c-28.835,0-52.212,23.373-52.212,52.216 c0,28.835,23.378,52.21,52.212,52.21h156.329h29.013h30.23c29.175,0,52.827-23.651,52.827-52.824 C497.973,374.64,474.321,350.991,445.146,350.991z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#D7EDF9\"\n    },\n    d: \"M285.258,337.525c0-18.847,4-36.758,11.185-52.941c-29.585,8.267-51.295,35.403-51.295,67.627 c0,0.8,0.035,1.592,0.059,2.382c-4.936-1.547-10.187-2.382-15.633-2.382c-28.835,0-52.212,23.373-52.212,52.216 c0,28.835,23.378,52.21,52.212,52.21h132.677C316.86,436.184,285.258,390.545,285.258,337.525z\"\n  }), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgWeatherLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/weather-logo.19461b5b.svg\";\nexport { ForwardRef as ReactComponent };","// get API keys: https://home.openweathermap.org/api_keys\n//         api.openweathermap.org/data/2.5/weather?q=London,uk&APPID=d67d5d5ea0a50132e71d327a5dc2f765\n// https://api.openweathermap.org/data/2.5/weather?q=congo&units=metric&appid=39abfd6ed55b4e52a6de04ae6c0b1296\n// https://api.openweathermap.org/data/2.5/weather?q=LONDON&units=metric&appid=d67d5d5ea0a50132e71d327a5dc2f765\n// TODO: Detect The Location of Your Website’s Visitors (city list: http://bulk.openweathermap.org/sample/)\n\nimport axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://api.openweathermap.org/data/2.5/'\n});\n\ninstance.interceptors.request.use(config => {\n    config.params = {\n        q: 'кингстон',\n        units: 'metric',\n        appid: '8fdcf23c538fc42ab60bbfda80143bb3',\n        ...config.params\n    }\n    return config\n});\n\nexport default instance;\n\n","import React from \"react\";\n\nconst WeatherBanner = () => (\n\n    <div id=\"weatherBanner\" className=\"ui segment image\">\n        <a href=\"https://tom2kota.github.io/current-weather-js/\">\n            <img src=\"https://via.placeholder.com/468x60?text=Visit+Weather+Now\" alt=\"weather banner\"/>\n        </a>\n    </div>)\n\nexport default WeatherBanner\n\n\n","import React, {Component} from \"react\";\n\nclass SearchBar extends Component {\n\n    state = {\n        // searchRegexTerm: ''\n        searchRegexTerm: 'кингстон',\n        searchRegexError: 'Regex Error! ... Check spelling'\n    };\n\n\n    onInputChange = event => {\n        this.setState({searchRegexTerm: event.target.value})\n    };\n\n    // (6)\n    onFormSubmit = event => {\n        event.preventDefault();\n        const regexp = /^[a-zа-я\\s-]{2,40}$/gi;\n\n        if (regexp.test(this.state.searchRegexTerm)) {\n            // (7) true\n            this.props.onTextSubmit(this.state.searchRegexTerm)\n        } else {\n            console.log('RegEx check Error:', this.state.searchRegexTerm);\n            this.props.onRegexError(this.state.searchRegexError)\n        }\n    };\n\n\n    render() {\n        return (\n\n            // (5)\n            <form onSubmit={this.onFormSubmit} className=\"ui large form\">\n\n                <div className=\"field\">\n                    <div className=\"ui left icon input\">\n                        <i className=\"search location icon\"/>\n                        <label htmlFor=\"weatherCountry\">\n                        </label>\n                        {/*// (4) */}\n                        <input id=\"weatherCountry\"\n                               type=\"search\"\n                               name=\"city\"\n                               placeholder=\"Enter your city\"\n                               required=\"required\"\n                               autoComplete=\"off\"\n                               minLength=\"2\"\n                               maxLength=\"40\"\n                               title=\"Allowed size (min: 2, max: 40 symbols)\"\n                               pattern=\".{2,40}\"\n                               value={this.state.searchRegexTerm}\n                               onChange={this.onInputChange}\n                        />\n                    </div>\n                </div>\n\n                <button type=\"submit\"\n                        id=\"weatherSearchButton\"\n                        className=\"ui fluid large teal submit button\">\n                    Search\n                </button>\n\n            </form>\n        )\n    }\n}\n\nexport default SearchBar","import React, {Component} from 'react';\nimport {ReactComponent as WeatherLogo} from '../images/weather-logo.svg'\nimport openweathermap from \"../api/openweathermap\";\nimport WeatherBanner from \"./WeatherBanner\";\nimport SearchBar from \"./SearchBar\";\n\nimport './App.css';\n\nclass App extends Component {\n    state = {\n        countryCode: 'Country Code',\n        countryName: 'City Name',\n        countryTemperature: 'Temperature',\n        countryWeather: 'Weather',\n        countryError: null,\n        countryError1: null\n    }\n\n    componentDidMount() {\n        // (1)\n        this.getSearchWeatherState();\n    }\n\n    // (2) & (8) true\n    getSearchWeatherState = async (searchRegexTerm = 'кингстон') => {\n\n        await openweathermap.get(\n            '/weather',\n            {\n                params: {\n                    q: searchRegexTerm\n                }\n            }\n        )\n            .then(\n                response => this.setState({\n                    countryError: null,\n                    countryCode: response.data.sys.country,\n                    countryName: response.data.name,\n                    countryTemperature: response.data.main.temp.toFixed(0),\n                    countryWeather: response.data.weather.map(x => x.description).toString().replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase()))),\n                })\n            )\n            .catch(\n                error => this.setState({\n                    countryError: 'Something went wrong!',\n                    countryCode: 'Country Code',\n                    countryName: 'City Name',\n                    countryTemperature: 'Temperature',\n                    countryWeather: 'Weather'\n                })\n            )\n    }\n\n    // TypeError: this.setState is not a function\n    // printRegexError [as onRegexError]\n    // printRegexError(searchRegexError) {this.setState({countryError: searchRegexError})}\n    // FIX:\n    printRegexError = (searchRegexError) => this.setState({countryError: searchRegexError})\n\n\n    render() {\n        return (\n            <div className=\"ui middle aligned center aligned grid\">\n                <div className=\"column\">\n                    <div className=\"ui raised very padded text segment\">\n\n\n                        <h1 className=\"ui teal image header\">\n                            <WeatherLogo className=\"image\"/>\n                            <span className=\"content\">Weather NOW!</span>\n                        </h1>\n\n\n                        <div className=\"ui segment\">\n                            {/*// (3) */}\n                            <SearchBar onTextSubmit={this.getSearchWeatherState} onRegexError={this.printRegexError}/>\n\n                        </div>\n\n                        <div>\n                            <p id=\"countryError\">{this.state.countryError}</p>\n                        </div>\n\n                        {/*// (8) */}\n                        <div className=\"ui segment\">\n                            <div className=\"ui center aligned teal segment\">\n                                <i id=\"countryFlag\"/>\n                                <span id=\"countryCode\">\n                                    <i className=\"flag outline icon\"/>{this.state.countryCode} &nbsp;</span>\n                                <i className={`flag ${this.state.countryCode.toLocaleLowerCase()}`}/>\n                            </div>\n                            <div id=\"countryName\" className=\"ui center aligned teal segment\">\n                                <i className=\"building outline icon\"/>\n                                <span>{this.state.countryName}</span>\n                            </div>\n                            <div id=\"countryTemperature\" className=\"ui center aligned teal segment\">\n                                <i className=\"thermometer half icon\"/>\n                                <span>{this.state.countryTemperature}</span>\n                            </div>\n                            <div id=\"countryWeather\" className=\"ui center aligned teal segment\">\n                                <i className=\"umbrella icon\"/>\n                                <span>{this.state.countryWeather}</span>\n                            </div>\n                        </div>\n\n                        <WeatherBanner/>\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}